{% for vhost in bika_vhosts %}
# HTTP VHOST: {{ vhost }}
server {
    listen 80;
    server_name {{ vhost }};

    rewrite ^(.*)(/login_|/require_login|/failsafe_login_form|/logged_in)(.*)(=http)(?!s)(.*) $1$2$3$4s$5 last;
    if ($http_cookie ~* "__ac=([^;]+)(?:;|$)" ) {
        rewrite ^(.*) https://$host$1 redirect;
    }

    location / {
        set $backend http://varnish;
        if ($uri ~* "@@API") {
            set $backend http://api;
        }
        proxy_set_header        Host            $http_host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        rewrite                 ^(.*)$ /VirtualHostBase/$scheme/$host/{{ bika_plone_site_id }}/VirtualHostRoot/$1 break;
        proxy_pass              $backend;
    }
}

# HTTPS VHOST: {{ vhost }}
server {
    listen 443 ssl;
    server_name {{ vhost }};

    ssl_certificate {{ bika_ssl_certificate }};
    ssl_certificate_key {{ bika_ssl_certificate_key }};

    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers {{ bika_ssl_cipher_suite }};
    ssl_dhparam {{ bika_ssl_dhparam }};
    ssl_prefer_server_ciphers on;

    # Allow Cross-Origin Resource Sharing from our HTTP domain
    add_header "Access-Control-Allow-Origin" "http://{{ vhost }}";
    add_header "Access-Control-Allow-Credentials" "true";
    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS";

    if ($http_cookie ~* "__ac=([^;]+)(?:;|$)" ) {
        # prevent infinite recursions between http and https
        break;
    }
    rewrite ^(.*)(/logged_out)(.*) http://$server_name$1$2$3 redirect;

    location / {
        set $backend http://varnish;
        # API calls take a different backend w/o caching
        if ($uri ~* "@@API") {
            set $backend http://api;
        }
        proxy_set_header        Host            $http_host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        rewrite                 ^(.*)$ /VirtualHostBase/$scheme/$host/{{ bika_plone_site_id }}/VirtualHostRoot/$1 break;
        proxy_pass              $backend;
    }

}
{% endfor %}